version: '3.7'

services:
  web:
    build:
      context: ..
      dockerfile: ./docker-web/django-gunicorn.Dockerfile
      args:
        EXECUTION_TYPE: distributed
        INSTALL_REDIS: "False"
        INSTALL_KAFKA: "False"
    command: ./django_run.sh
    volumes:
      - static_volume:/home/django/C01/staticfiles
      - data:/data
    expose:
      - 8000
    env_file:
      - .env.prod
    depends_on:
      - db
    restart: on-failure
  nginx:
    build:
      context: ..
      dockerfile: ./docker-web/nginx.Dockerfile
    volumes:
      - static_volume:/home/nginx/staticfiles
    ports:
      - 8000:80
    depends_on:
      - web
  db:
    image: postgres:12.0-alpine
    hostname: localhost
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod
    ports:
      - "5432:5432"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env.prod
    restart: always
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    env_file:
      - .env.prod
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always
  file_descriptor:
    build:
      context: ..
      dockerfile: ./docker-web/file-descriptor.Dockerfile
    command: python3 -m broker_interface.start_descriptor
    volumes:
      - data:/data
    env_file:
      - .env.prod
    depends_on:
      - kafka
    restart: on-failure

volumes:
  static_volume:
  data:
  postgres_data:
