# Generated by Django 3.1.3 on 2020-12-04 02:53

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CrawlRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('source_name', models.CharField(max_length=200)),
                ('base_url', models.CharField(max_length=200)),
                ('obey_robots', models.BooleanField(blank=True, null=True)),
                ('data_path', models.CharField(blank=True, max_length=2000, null=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z\\/\\\\-_]*$', 'This is not a valid path.')])),
                ('request_type', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST')], default='GET', max_length=15)),
                ('antiblock_download_delay', models.IntegerField(blank=True, null=True)),
                ('antiblock_autothrottle_enabled', models.BooleanField(blank=True, null=True)),
                ('antiblock_autothrottle_start_delay', models.IntegerField(blank=True, null=True)),
                ('antiblock_autothrottle_max_delay', models.IntegerField(blank=True, null=True)),
                ('antiblock_mask_type', models.CharField(blank=True, choices=[('none', 'None'), ('ip', 'IP rotation'), ('user_agent', 'User-agent rotation'), ('cookies', 'Use cookies')], default='none', max_length=15, null=True)),
                ('antiblock_ip_rotation_type', models.CharField(blank=True, choices=[('tor', 'Tor'), ('proxy', 'Proxy')], max_length=15, null=True)),
                ('antiblock_proxy_list', models.CharField(blank=True, max_length=2000, null=True)),
                ('antiblock_max_reqs_per_ip', models.IntegerField(blank=True, null=True)),
                ('antiblock_max_reuse_rounds', models.IntegerField(blank=True, null=True)),
                ('antiblock_reqs_per_user_agent', models.IntegerField(blank=True, null=True)),
                ('antiblock_user_agents_file', models.CharField(blank=True, max_length=2000, null=True)),
                ('antiblock_cookies_file', models.CharField(blank=True, max_length=2000, null=True)),
                ('antiblock_persist_cookies', models.BooleanField(blank=True, null=True)),
                ('captcha', models.CharField(choices=[('none', 'None'), ('image', 'Image'), ('sound', 'Sound')], default='none', max_length=15)),
                ('has_webdriver', models.BooleanField(blank=True, null=True)),
                ('webdriver_path', models.CharField(blank=True, max_length=1000, null=True)),
                ('img_xpath', models.CharField(blank=True, max_length=100, null=True)),
                ('sound_xpath', models.CharField(blank=True, max_length=100, null=True)),
                ('dynamic_processing', models.BooleanField(blank=True, null=True)),
                ('explore_links', models.BooleanField(blank=True, null=True)),
                ('link_extractor_max_depth', models.IntegerField(blank=True, null=True)),
                ('link_extractor_allow_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('download_files', models.BooleanField(blank=True, null=True)),
                ('download_files_allow_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('download_files_allow_extensions', models.CharField(blank=True, max_length=2000, null=True)),
                ('download_imgs', models.BooleanField(default=False)),
                ('wait_crawler_finish_to_download', models.BooleanField(default=False)),
                ('time_between_downloads', models.IntegerField(blank=True, null=True)),
                ('steps', models.CharField(blank=True, default='{}', max_length=9999999, null=True)),
                ('save_csv', models.BooleanField(blank=True, null=True)),
                ('table_attrs', models.CharField(blank=True, max_length=20000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DownloadDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('status', models.CharField(choices=[('DOWNLOADING', 'DOWNLOADING'), ('WAITING', 'WAITING'), ('DONE', 'DONE'), ('ERROR', 'ERROR')], default='WAITING', max_length=20)),
                ('description', models.CharField(blank=True, max_length=1000)),
                ('size', models.PositiveIntegerField(blank=True, null=True)),
                ('progress', models.PositiveIntegerField(blank=True, null=True)),
                ('error_message', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResponseHandler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handler_type', models.CharField(choices=[('text', 'Texto na página'), ('http_status', 'Código de status HTTP'), ('binary', 'Arquivo de tipo binário')], max_length=15)),
                ('text_match_value', models.CharField(blank=True, max_length=1000)),
                ('http_status', models.PositiveIntegerField(blank=True, null=True)),
                ('opposite', models.BooleanField(default=False)),
                ('crawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='response_handlers', to='main.crawlrequest')),
            ],
        ),
        migrations.CreateModel(
            name='ParameterHandler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_key', models.CharField(blank=True, max_length=1000)),
                ('filter_range', models.BooleanField(default=False)),
                ('cons_misses', models.PositiveIntegerField(blank=True, null=True)),
                ('parameter_type', models.CharField(choices=[('process_code', 'Código de processo'), ('number_seq', 'Sequência numérica'), ('date_seq', 'Sequência de datas'), ('alpha_seq', 'Sequência alfabética')], default='none', max_length=15)),
                ('first_year_proc_param', models.PositiveIntegerField(blank=True, null=True)),
                ('last_year_proc_param', models.PositiveIntegerField(blank=True, null=True)),
                ('segment_ids_proc_param', models.CharField(blank=True, max_length=1000, validators=[django.core.validators.RegexValidator('^(\\s*[0-9]+\\s*,)*\\s*[0-9]+\\s*$', 'Insira uma lista de números separados por vírgula.')])),
                ('court_ids_proc_param', models.CharField(blank=True, max_length=1000, validators=[django.core.validators.RegexValidator('^(\\s*[0-9]+\\s*,)*\\s*[0-9]+\\s*$', 'Insira uma lista de números separados por vírgula.')])),
                ('origin_ids_proc_param', models.CharField(blank=True, max_length=1000, validators=[django.core.validators.RegexValidator('^(\\s*[0-9]+\\s*,)*\\s*[0-9]+\\s*$', 'Insira uma lista de números separados por vírgula.')])),
                ('first_num_param', models.IntegerField(blank=True, null=True)),
                ('last_num_param', models.IntegerField(blank=True, null=True)),
                ('step_num_param', models.IntegerField(blank=True, null=True)),
                ('leading_num_param', models.BooleanField(default=False)),
                ('length_alpha_param', models.PositiveIntegerField(blank=True, null=True)),
                ('num_words_alpha_param', models.PositiveIntegerField(blank=True, null=True)),
                ('no_upper_alpha_param', models.BooleanField(default=False)),
                ('date_format_date_param', models.CharField(blank=True, max_length=1000)),
                ('start_date_date_param', models.DateField(blank=True, null=True)),
                ('end_date_date_param', models.DateField(blank=True, null=True)),
                ('frequency_date_param', models.CharField(choices=[('Y', 'Anual'), ('M', 'Mensal'), ('D', 'Diária')], default='D', max_length=15)),
                ('crawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_handlers', to='main.crawlrequest')),
            ],
        ),
        migrations.CreateModel(
            name='CrawlerInstance',
            fields=[
                ('creation_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField()),
                ('instance_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('running', models.BooleanField()),
                ('crawler_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='main.crawlrequest')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
